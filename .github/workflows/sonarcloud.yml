name: CI - Tests et Analyse SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Copier settings.xml
        run: cp .github/workflows/settings.xml $HOME/.m2/settings.xml

      - name: Installer user-api localement
        run: mvn clean install -DskipTests -s $HOME/.m2/settings.xml
        working-directory: user-api

      - name: Exécuter tests + couverture
        run: mvn clean verify -s $HOME/.m2/settings.xml
        working-directory: gestion-produit

      - name: Upload des rapports de test et couverture
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: gestion-produit/target/site/jacoco/jacoco.xml

  sonar:
    needs: test
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Copier settings.xml
        run: cp .github/workflows/settings.xml $HOME/.m2/settings.xml

      - name: Télécharger les rapports générés par le job test
        uses: actions/download-artifact@v4
        with:
          name: reports
          path: gestion-produit/target/site/jacoco

      - name: Compiler + analyser avec SonarCloud
        run: |
          mvn clean compile sonar:sonar \
            -Dsonar.projectKey=zaougaeya_Microservice-Springboot-Angular \
            -Dsonar.organization=zaougaeya \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=gestion-produit/target/site/jacoco/jacoco.xml \
            -s $HOME/.m2/settings.xml
        working-directory: gestion-produit

  deploy:
    needs: test
    runs-on: ubuntu-latest

    env:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Copier settings.xml
        run: cp .github/workflows/settings.xml $HOME/.m2/settings.xml

      - name: Deploy gestion-produit vers Nexus
        run: mvn clean deploy -DskipTests -s $HOME/.m2/settings.xml
        working-directory: gestion-produit

  docker-push:
    needs: deploy
    runs-on: ubuntu-latest

    env:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NEXUS_DOCKER_URL: localhost:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx (optionnel pour builder multi-arch)
        uses: docker/setup-buildx-action@v2

      - name: Login to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.NEXUS_DOCKER_URL }}
          username: ${{ env.NEXUS_USERNAME }}
          password: ${{ env.NEXUS_PASSWORD }}

      - name: Build Docker image
        run: docker build -t $NEXUS_DOCKER_URL/gestion-produit:0.0.1 .

      - name: Push Docker image to Nexus
        run: docker push $NEXUS_DOCKER_URL/gestion-produit:0.0.1